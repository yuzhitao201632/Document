input { 
  	#beats {
    	#	port => 5043
  	#}
	file {
		path => [ "/export/seven/1004/*/world2.formatlog", "/export/seven/1005/*/world2.formatlog" ]
		#path => [ "/export/seven/*/*/world2.test" ]
		start_position => "beginning"	
	}
}

filter {
	grok {
		patterns_dir => ["/export/open_test/logstash/patterns"]
    		match => { 
			"path" => "%{NUMBER:zoneid}/%{MY_DATE:my_date}"
		}
		add_field => { "log_date" => "log_date" }
	}
	grok {
		patterns_dir => ["/export/open_test/logstash/patterns"]
    		match => { 
			"message" => "%{TIMESTAMP_ISO8601:log_time}%{DATA}formatlog:rolelogin:%{NOTSPACE}:roleid=%{NUMBER:roleid}:%{NOTSPACE}:lev=%{NUMBER:level}"
		}
		add_field => { "log_type" => "roleloginlogout" }
		add_field => { "loginout" => "login" }
		add_field => { "online_time" => 0 }
		break_on_match => true
	}
	grok {
		patterns_dir => ["/export/open_test/logstash/patterns"]
    		match => { 
			"message" => "%{TIMESTAMP_ISO8601:log_time}%{DATA}formatlog:rolelogout:%{NOTSPACE}:roleid=%{NUMBER:roleid}:%{NOTSPACE}:lev=%{NUMBER:level}:%{NOTSPACE}:time=%{NUMBER:online_time}"
		}
		add_field => { "log_type" => "roleloginlogout" }
		add_field => { "loginout" => "logout" }
		break_on_match => true
	}
	grok {
		patterns_dir => ["/export/open_test/logstash/patterns"]
    		match => { 
			"message" => "%{TIMESTAMP_ISO8601:log_time}%{DATA}formatlog:task_%{TASK_FLOW_TYPE:flow_type}:from=%{NUMBER}:os=%{NUMBER}:roleid=%{NUMBER:roleid}:level=%{NUMBER:level}:taskid=%{NUMBER:taskid}"
		}
		add_field => { "log_type" => "taskflow" }
		break_on_match => true
	}
	grok {
		patterns_dir => ["/export/open_test/logstash/patterns"]
    		match => { 
			"message" => "%{TIMESTAMP_ISO8601:log_time}%{DATA}formatlog:createrole:from%{NOTSPACE}:roleid=%{NUMBER:roleid}:%{NOTSPACE}:profession=%{NUMBER:profession}:nation=%{NUMBER:nation}"
		}
		add_field => { "log_type" => "createrole" }
		break_on_match => true
	}
	grok {
		patterns_dir => ["/export/open_test/logstash/patterns"]
    		match => { 
			"message" => "%{TIMESTAMP_ISO8601:log_time}%{DATA}formatlog:levelup_lo:roleid=%{NUMBER:roleid}:level=%{NUMBER:level}:%{NOTSPACE}:time_used=%{NUMBER:time_used}:prof=%{NUMBER:profession}"
		}
		add_field => { "log_type" => "levelup" }
		break_on_match => true
	}
	grok {
		patterns_dir => ["/export/open_test/logstash/patterns"]
    		match => { 
			"message" => "%{TIMESTAMP_ISO8601:log_time}%{DATA}formatlog:death:roleid=%{NUMBER:roleid}:level=%{NUMBER:level}:attacker_id=%{NUMBER:attacker_id}:attacker_level=%{NUMBER:attacker_level}:%{NOTSPACE}:scene_tag=%{NUMBER:scene_tag}:x=%{NUMBER:x}:y=%{NUMBER:y}:z=%{NUMBER:z}"
		}
		add_field => { "log_type" => "death" }
		break_on_match => true
	}

	if [log_type] != "roleloginlogout"  and [log_type] != "taskflow" and [log_type] != "createrole"
		and [log_type] != "levelup" and [log_type] != "death"
	{
		drop {}
	}
}

output {
	if [log_date] 
	{
		if [log_type] == "roleloginlogout"
		{
			file 
			{
				path => "/export/open_test/logstash/stage_6/%{zoneid}/%{my_date}_%{log_type}"
				codec => line { format => "%{log_time} %{roleid} %{loginout} %{level} %{online_time}" }
			}
		}
		else if [log_type] == "taskflow"
		{
			file 
			{
				path => "/export/open_test/logstash/stage_6/%{zoneid}/%{my_date}_%{log_type}"
				codec => line { format => "%{log_time} %{roleid} %{level} %{taskid} %{flow_type}" }
			}
		}
		else if [log_type] == "createrole"
		{
			file 
			{
				path => "/export/open_test/logstash/stage_6/%{zoneid}/%{my_date}_%{log_type}"
				codec => line { format => "%{log_time} %{roleid} %{profession} %{nation}" }
			}
		}
		else if [log_type] == "levelup"
		{
			file 
			{
				path => "/export/open_test/logstash/stage_6/%{zoneid}/%{my_date}_%{log_type}"
				codec => line { format => "%{log_time} %{roleid} %{profession} %{level} %{time_used}" }
			}
		}
		else if [log_type] == "death"
		{
			file 
			{
				path => "/export/open_test/logstash/stage_6/%{zoneid}/%{my_date}_%{log_type}"
				codec => line { format => "%{log_time} %{roleid} %{level} %{attacker_id} %{attacker_level} %{scene_tag} (%{x},%{y},%{z})" }
			}
		}
	}
}
